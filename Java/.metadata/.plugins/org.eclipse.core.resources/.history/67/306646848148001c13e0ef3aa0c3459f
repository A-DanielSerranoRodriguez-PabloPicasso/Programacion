package libro.Tema9.POO.ClasesEntregar;

public class CuentaBancaria {
	private String dni, iban;
	private double saldo;
	private int pin;
	private boolean bloqueada, conectada;

	// Const
	public CuentaBancaria(String dni, int pin) {
		super();
		this.dni = dni;
		this.pin = pin;
		this.iban = Integer.toString((int) Math.random() * 6);
		this.saldo = 0;
		this.bloqueada = false;
		this.conectada = false;
	}

	// Getters - Setters
	public String getDni() {
		return dni;
	}

	public String getIban() {
		return iban;
	}

	public double getSaldo() {
		return saldo;
	}

	public boolean isBloqueada() {
		return bloqueada;
	}

	public boolean isConectada() {
		return conectada;
	}

	// Methods
	public void comprobarPin(int pin) {
		int cont = 0;
		while (cont != 3) {
			if (this.pin == pin) {
				this.bloqueada = false;
				this.conectada=true;
			}
			else {
				cont++;
				if (cont == 3) {
					this.bloqueada = true;
					this.conectada=false;
				}
			}
		}
	}

	public void ingreso(double cantidad) throws Exception {
		if (!this.bloqueada && this.conectada)
			if (cantidad > 0)
				this.saldo += cantidad;
			else {
				if (cantidad == 0) {
					System.out.println("Introduce algo de dinero");
				} else
					throw new Exception("Introduce una cantidad de dinero positiva");
			}
		else
			System.out.println("Cuenta bloqueada");

	}

	public void retirada(double cantidad) throws Exception {
		if (!this.bloqueada)
			if (cantidad > 0)
				if (cantidad <= this.saldo)
					this.saldo -= cantidad;
				else
					System.out.println("No tienes tanto dinero");
			else {
				if (cantidad == 0) {
					System.out.println("Introduce algo de dinero");
				} else
					throw new Exception("Introduce una cantidad de dinero positiva");
			}
		else
			System.out.println("Cuenta bloqueada");
	}

	public void transferencia(CuentaBancaria destino, double cantidad) {
		if (!this.bloqueada)
			if (!destino.bloqueada) {
				try {
					this.retirada(cantidad);
				} catch (Exception e) {
					e.printStackTrace();
				}
				try {
					destino.ingreso(cantidad);
				} catch (Exception e) {
					e.printStackTrace();
				}
			} else
				System.out.println("Cuenta destinataria bloqueada");
		else
			System.out.println("Cuenta bloqueada");

	}

	// toString
	@Override
	public String toString() {
		return "CuentaBancaria [dni=" + dni + ", iban=" + iban + ", saldo=" + saldo + ", bloqueada=" + bloqueada + "]";
	}

}
